Inicializacao
- flag_spawn <- 1 //flag_spawn, caso 1, spawna peca ------------------------------------ PRONTO

main
- imprime mensagem inicial ------------------------------------------------------------- PRONTO
- wait_start --- PRONTO
	- var count --PRONTO
		-> inc count -> reset a cada 499 --PRONTO
			-> condicao de stop : enter --PRONTO
	- wait enter --PRONTO
- inicia jogo -------------------------------------------------------------------------- PRONTO
	-> desenha_mapa -- PRONTO
	-> index inicial do vetor randomico <- count --PRONTO
	-> t_peca <- rand[index inicial] --PRONTO
- spawn peca --------------------------------------------------------------------------- PRONTO, mas pode dar problema futuramente
	-> verifica flag_spawn //caso 0, skip spawn peca -- PRONTO
	-> verificar t_peca --PRONTO
	-> verifica se é possível spawn //caso não seja, GAME OVER (flag_perdeu=1) -- PRONTO, mas não é possível testar ainda
	-> definir posição de spawn --PRONTO
	-> desenha peca --PRONTO
		-> calc_quads --PRONTO
	-> flag_spawn <- 0 --PRONTO

MAIN LOOP
	- mover peca ---------------------------------------------------------------- EM PROGRESSO
		-> verificar input e recalcula posicao --EM PROGRESSO
			-> recalcula posicao --PRONTO
			-> atualizar posicao -- EM PROGRESSO
				-> mov esquerda (atualiza posicao) --EM PROGRESSO
					-> verificar se é possível mover com base na cópia do mapa
				-> mov direita (atualiza posicao)  --EM PROGRESSO
					-> verificar se é possível mover com base na cópia do mapa
				-> rotaciona (atualiza t_peca)
				-> mov baixo pelo input *
				-> descer de uma vez *
		-> verificar se moveu peca --PRONTO
			-> caso sim	
				-> apaga desenho da peca --PRONTO
				-> desenha peca --PRONTO
	- descer peca (automaticamente)
		-> delay para descer
		-> flag se desce ou nao
		-> se down_flag = 1
			-> verifica se é possível descer (se está no chão ou se encostou em outra peça) (possivelmente desncessário verificar se está no chã)
			-> atualiza posicao
			-> apaga peca
			-> desenha peca
			-> atualiza flag para 0 (nao descer)	

	- verifica colisao
		-> setar flags de colisão
			-> colisao em baixo
			-> colisao esquerda
			-> colisao direita
			-> colisao em cima *
		-> se colisao em baixo, entao
			-> fixa peca
				-> atualiza mapa (atualizar copia de mapa)
				-> flag_spawn <- 1
				-> vetor temporario da ultima peca <- posicao dos quadradinhos da peca fixada (para depois dividir por 40 (divisao inteira))
	- verifica se completa linha
		-> se True move tudo que esta acima para baixo
			-> pontuacao++
	- spawn peca
	- verificar se perdeu
